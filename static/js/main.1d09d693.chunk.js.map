{"version":3,"sources":["UserService.js","UserContext.js","Person.js","UsersOneLetter.js","BirthDays.js","Users.js","App.js","reportWebVitals.js","index.js"],"names":["UserService","users","i","push","fetch","then","res","json","result","length","index","indexOf","firstName","toUpperCase","UserContext","React","createContext","displayName","BlockRadio","props","className","id","htmlFor","type","name","value","act","checked","onChange","toggle","text","Person","useState","active","setActive","userContext","useContext","toggleActive","param","user","Provider","userActive","lastName","UsersOneLetter","this","letter","map","Component","getLocaleDate","date","dat","Date","toLocaleDateString","day","month","getFullYear","getFilteredList","arrUsers","Object","values","filter","item","arrMonth","gerTemplateResultArray","forEach","dob","UserBirthDay","OneMonth","BirthDays","listUsers","number","Users","state","error","isLoaded","getUsers","setState","message","Array","from","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d09d693.chunk.js","sourcesContent":["class UserService {\r\n\r\n    static getUsers() {\r\n        const COUNT_LETTER = 26;\r\n        const ALPHABET_UPPER = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        const users = [];\r\n\r\n        for (let i = 0; i < COUNT_LETTER; i++ ) {\r\n            users.push([])\r\n        }\r\n\r\n        return fetch('https://yalantis-react-school-api.yalantis.com/api/task0/users')\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    for (let i = 0; i < result.length; i++) {\r\n                        let index = ALPHABET_UPPER.indexOf(result[i].firstName[0].toUpperCase())\r\n                        users[index].push(result[i])\r\n                    }\r\n                    return users;\r\n                }\r\n            );\r\n    }\r\n}\r\n\r\nexport default UserService;\r\n","import React from 'react';\r\n\r\nexport const UserContext = React.createContext({});\r\n\r\nUserContext.displayName = \"UserContext\";\r\n","import React, {useState, useContext} from 'react';\r\nimport {UserContext} from \"./UserContext\";\r\n\r\nfunction BlockRadio(props) {\r\n\r\n    return (\r\n\r\n        <div className={\"block-radio user-\" + props.id} key={props.id}>\r\n            <label htmlFor={\"user-input-\" + props.id}>\r\n                <input\r\n                    type=\"radio\"\r\n                    name={\"user-input-\" + props.id}\r\n                    value={props.act}\r\n                    checked={props.act}\r\n                    onChange={props.toggle}\r\n                />\r\n                {props.text}\r\n            </label>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport function Person(props) {\r\n    const [active, setActive] = useState(0);\r\n    const userContext = useContext(UserContext)\r\n\r\n\r\n    function toggleActive(param) {\r\n        setActive(param)\r\n        userContext[props.user.id] = {user: props.user, active: param};\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={userContext}>\r\n            <div className=\"employee\" key={props.user.id}>\r\n                <div className=\"user-names\" userActive={active}>{props.user.firstName} {props.user.lastName}</div>\r\n\r\n                <BlockRadio id={props.user.id} act={!active ? 1 : 0} toggle={() => toggleActive(0)}\r\n                            text={'not active'}/>\r\n                <BlockRadio id={props.user.id} act={active ? 1 : 0} toggle={() => toggleActive(1)} text={'active'}/>\r\n            </div>\r\n        </UserContext.Provider>\r\n\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Person} from \"./Person\";\r\n\r\nclass UsersOneLetter extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"one-letter\">\r\n                <div className=\"letter-column\" key={this.props.index}>{this.props.letter}</div>\r\n                {this.props.users.length ?\r\n                    this.props.users.map((user) => (\r\n                        <Person user={user}/>\r\n                    )) : <div className=\"employee\">No Employees</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UsersOneLetter;\r\n","import React, {useContext} from 'react';\r\nimport {UserContext} from \"./UserContext\";\r\n\r\nfunction convertDate(date) {\r\n    return new Date(date)\r\n}\r\n\r\nfunction getLocaleDate(date) {\r\n    const dat = new Date(date)\r\n\r\n    return dat.toLocaleDateString('en-US', {day: '2-digit'}) + ' ' +\r\n        dat.toLocaleDateString('en-US', {month: 'long'}) + ', ' + dat.getFullYear() + ' year';\r\n\r\n}\r\n\r\nfunction gerTemplateResultArray() {\r\n    const arrMonth = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        arrMonth.push([]);\r\n    }\r\n\r\n    return arrMonth;\r\n}\r\n\r\nfunction getFilteredList(value) {\r\n\r\n    const arrUsers = Object.values(value).filter(item => item.active === 1);\r\n    const result = gerTemplateResultArray();\r\n\r\n    arrUsers.forEach(item => {\r\n        result[convertDate(item.dob)].push(item)\r\n    })\r\n\r\n    return result\r\n\r\n}\r\n\r\nfunction getNameMonth(index) {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\r\n    return monthNames[index]\r\n}\r\n\r\nfunction UserBirthDay(props) {\r\n\r\n    return (\r\n        <li className=\"user-birthday\" key={props.user.id}>\r\n            {props.user.firstName} {props.user.firstName} - {getLocaleDate(props.user.dob)}\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction OneMonth(props) {\r\n    return (\r\n        <>\r\n            <div className=\"block-month\">\r\n                {getNameMonth(props.index)}\r\n            </div>\r\n            <div>\r\n                <ul className=\"list-birthday\">\r\n                    {props.users.map(item =>\r\n                        (<UserBirthDay user={item}/>)\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function BirthDays(props) {\r\n    const value = useContext(UserContext);\r\n    const listUsers = getFilteredList(value);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header\">Employees birthday</div>\r\n            {listUsers.map((item, index) => (\r\n                item.length ? <OneMonth number={index} users={item}/> : (<div></div>)\r\n            ))}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport UserService from \"./UserService\";\r\nimport UsersOneLetter from \"./UsersOneLetter\";\r\nimport BirthDays from \"./BirthDays\";\r\nimport {UserContext} from \"./UserContext\";\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            users: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserService.getUsers()\r\n            .then((result) => {\r\n                    this.setState({isLoaded: true, users: result});\r\n                },\r\n                (error) => {\r\n                    this.setState({isLoaded: true, error});\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        const {error, isLoaded, users} = this.state;\r\n        const ALPHABET_UPPER = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        if (error) {\r\n            return (\r\n                <div>\r\n                    <p>Error {error.message}</p>\r\n                </div>\r\n            );\r\n        } else if (!isLoaded) {\r\n            return (\r\n                <div>\r\n                    <p>Loading</p>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <UserContext.Provider value={{}}>\r\n                    <div className=\"UsersPage\">\r\n                        <div className=\"Users\">\r\n                            <div className=\"header\">Employees</div>\r\n                            <div className=\"user-list\">\r\n                                {Array.from(ALPHABET_UPPER).map(\r\n                                    (letter, index) => (\r\n                                        <UsersOneLetter letter={letter} index={index} users={users[index]}/>\r\n                                    )\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"BirthDays\">\r\n                            <BirthDays/>\r\n                        </div>\r\n                    </div>\r\n                </UserContext.Provider>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Users;\r\n","import './App.css';\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Users/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}